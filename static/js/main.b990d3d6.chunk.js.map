{"version":3,"sources":["components/UserList.module.css","components/Chat.module.css","components/UserList.jsx","api/api.js","redux/usersReducer.js","components/Input.jsx","components/Message.jsx","components/Chat.jsx","redux/chatReducer.js","components/Auth.jsx","redux/authReducer.js","App.jsx","redux/store.js","index.js","components/Auth.module.css"],"names":["module","exports","UserList","users","setTarget","userList","map","i","indx","onClick","login","username","key","className","Style","user","src","picture","thumbnail","alt","list","online","usersAPI","fetch","then","res","json","authAPI","authorization","data","a","localStorage","setItem","JSON","stringify","getAuthorization","getItem","auth","logout","removeItem","SET_USERS","initialState","userReducer","state","action","type","Input","target","submit","placeholder","useState","text","setText","useEffect","inputForm","value","onChange","e","char","onKeyPress","msg","shiftKey","preventDefault","submitOnEnter","Message","deleteMessage","editMessage","chat","editMode","setEditMode","editModal","setEditModal","setPlaceHolder","style","nickname","myNick","boxShadow","myColor","undefined","messageWrapper","color","messageNickname","message","trim","spaceValidate","length","edit","delete","Chat","props","greetings","setGreetings","sendWorkMessage","sendFloodMessage","log","useRef","current","scrollTop","setTimeout","workChatLog","workChat","floodChatLog","floodChat","chatWrapper","chatLogWrapper","chatLog","ref","formWrapper","SEND_WORK","SEND_FLOOD","TARGET","DELETE","EDIT","chatReducer","newMessage","chatType","newWorkChat","splice","newFloodChat","Auth","setNickname","setColor","setAuthorization","clrbox","colors","backgroundColor","width","height","box","authWrapper","nicknameAuth","colorsetter","colorbox","name","clr","btn","AUTH","GET_AUTH","isAuth","setAuth","getAuth","boolean","authReducer","connect","usersReducer","getUsersThunk","dispatch","results","parse","logoutThunk","setchatType","active","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b990d3d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UserList_list__2cFfZ\",\"online\":\"UserList_online__c3tSj\",\"user\":\"UserList_user__3pZ39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatWrapper\":\"Chat_chatWrapper__2l3OG\",\"chatLogWrapper\":\"Chat_chatLogWrapper__1F6pp\",\"chatLog\":\"Chat_chatLog__aoI48\",\"greetings\":\"Chat_greetings__zZ3m4\",\"messageWrapper\":\"Chat_messageWrapper__3GqJj\",\"message\":\"Chat_message__3s4-l\",\"messageNickname\":\"Chat_messageNickname__3qpAM\",\"editMode\":\"Chat_editMode__3jxmr\",\"delete\":\"Chat_delete__14oXm\",\"edit\":\"Chat_edit__118vp\",\"formWrapper\":\"Chat_formWrapper__19_qo\",\"inputForm\":\"Chat_inputForm__9pctt\",\"editModal\":\"Chat_editModal__1sYCs\"};","import React from 'react';\nimport Style from './UserList.module.css'\n\nconst UserList = ({ users, setTarget }) => {\n  const userList = users.map((i, indx) => {\n    return <div\n      onClick={() => setTarget(i.login.username)}\n      key={indx}\n      className={Style.user}\n    >\n      <img src={i.picture.thumbnail} alt=\"#\" />\n      {i.login.username}\n    </div>\n  })\n\n  return (\n    <div className={Style.list}>\n      <div className={Style.online}>Online: </div>\n      {userList}\n    </div>\n  );\n}\n\nexport default UserList;\n","export const usersAPI = {\r\n    getUsers: () => {\r\n        return fetch('https://randomuser.me/api/?results=10')\r\n            .then(res => {\r\n                return res.json()\r\n            })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    authorization: async (data) => {\r\n        localStorage.setItem('TOT-chat-auth', JSON.stringify(data));\r\n        return data;\r\n    },\r\n\r\n    getAuthorization: async () => {\r\n        const res = await localStorage.getItem('TOT-chat-auth');\r\n        if (res === null) {\r\n            return false\r\n        }\r\n        return { res, auth: true };\r\n    },\r\n\r\n    logout: async () => {\r\n        const res = await localStorage.removeItem('TOT-chat-auth');\r\n        return res;\r\n    }\r\n\r\n}\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst SET_USERS = \"usersReducer/SET_USERS\";\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n\r\n            return {\r\n                ...state, users: [...action.users]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setUsers = users => {\r\n    return { type: SET_USERS, users };\r\n}\r\n\r\n//thunk\r\nexport const getUsersThunk = () => {\r\n    return async dispatch => {\r\n        let data = await usersAPI.getUsers();\r\n        dispatch(setUsers(data.results));\r\n    }\r\n}\r\nexport default userReducer;","import React, { useEffect, useState } from 'react';\nimport Style from './Chat.module.css';\n\nconst Input = ({ target, submit, placeholder }) => {\n  const [text, setText] = useState('');\n  useEffect(() => {\n    target && setText(target)\n  }, [target, setText])\n\n  const changeText = char => setText(char);\n\n  const submitOnEnter = (e, msg) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      submit(msg);\n      setText('');\n    }\n  }\n\n  return (\n    <form className={Style.inputForm}>\n      <input\n        type=\"text\"\n        value={text}\n        onChange={e => changeText(e.target.value)}\n        onKeyPress={e => submitOnEnter(e, text)}\n        placeholder={placeholder}\n      />\n      <button\n        type='button'\n        className={Style.submit}\n        onClick={(e) => {\n          submit(text);\n          setText('')\n        }}\n      >submit</button>\n    </form>\n  );\n}\n\nexport default Input;\n","import React, { useState } from 'react';\nimport Style from './Chat.module.css'\nimport Input from './Input';\n\nconst Message = ({\n  i, indx, deleteMessage, editMessage,\n  auth, chat, type }) => {\n\n  //deleteMessage, editMessage \n  const [editMode, setEditMode] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [text, setText] = useState('');\n  const [placeholder, setPlaceHolder] = useState('');\n\n  const spaceValidate = msg => {\n    return msg.trim();\n  }\n\n  const edit = (msg) => {\n    const validate = spaceValidate(msg);\n    if (validate.length !== 0) {\n      editMessage(indx, type, msg, auth.myNick, auth.myColor);\n      setEditModal(!editModal)\n      setText('')\n    }\n    else {\n      setText('');\n      setPlaceHolder('Введите сообщение.');\n    }\n  }\n\n  return <div\n    style={i.nickname === auth.myNick ? { boxShadow: `0px 0px 8px ${auth.myColor}` } : undefined}\n    className={Style.messageWrapper}\n    key={indx}\n    onClick={() => setEditMode(!editMode)}\n  >\n    <div\n      style={{ color: i.color }}\n      className={Style.messageNickname}\n    >\n      {i.nickname}:\n    </div>\n    <div className={Style.message}>\n      {i.message}\n      {editModal && i.nickname === auth.myNick && <div className={Style.editModal}>\n        <Input\n          setText={setText}\n          target={chat.target}\n          placeholder={placeholder}\n          text={text}\n          submit={edit}\n        />\n      </div>}\n    </div>\n    {editMode && i.nickname === auth.myNick && <div className={Style.editMode}>\n      <div\n        className={Style.edit}\n        onClick={() => {\n          setEditModal(!editModal);\n        }}\n      >edit</div>\n      <div\n        className={Style.delete}\n        onClick={() => deleteMessage(indx, type)}\n      >delete</div>\n    </div>}\n\n  </div>\n}\n\n\n\nexport default Message;\n","import React, { useEffect, useState, useRef } from 'react';\nimport Style from './Chat.module.css'\nimport Input from './Input';\nimport Message from './Message';\n\nconst Chat = props => {\n\n  const [greetings, setGreetings] = useState(true);\n  const [placeholder, setPlaceHolder] = useState('');\n\n  const { chat, type, auth, sendWorkMessage, sendFloodMessage } = props;\n\n  const log = useRef([]);\n\n  useEffect(() => {\n    log.current.scrollTop = 99999;\n  })\n\n  const spaceValidate = msg => {\n    return msg.trim();\n  }\n\n  const sendMessage = msg => {\n    const validate = spaceValidate(msg);\n    if (validate.length !== 0) {\n      if (type === 'work') {\n        sendWorkMessage(msg, auth.myNick, auth.myColor);\n      } else if (type === 'flood') {\n        sendFloodMessage(msg, auth.myNick, auth.myColor);\n      }\n    }\n    else {\n      setPlaceHolder('Введите сообщение.');\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => setGreetings(false), 6000);\n  }, [])\n\n  const workChatLog = chat.workChat.map((i, indx) => {\n    return <Message key={indx} i={i} indx={indx} {...props} />\n  })\n\n  const floodChatLog = chat.floodChat.map((i, indx) => {\n    return <Message key={indx} i={i} indx={indx} {...props} />\n  })\n\n  return (\n    <div className={Style.chatWrapper}>\n      <div className={Style.chatLogWrapper}>\n        <div className={Style.chatLog} ref={log}>\n          {type === \"work\" ? workChatLog : floodChatLog}\n        </div>\n        {greetings && <div className={Style.greetings}>Добро пожаловать в чат!</div>}\n      </div>\n      <div className={Style.formWrapper}>\n        <Input\n\n          target={chat.target}\n          placeholder={placeholder}\n\n          submit={sendMessage}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","const SEND_WORK = 'chatReducer/SEND_WORK';\r\nconst SEND_FLOOD = 'chatReducer/SEND_FLOOD';\r\nconst TARGET = 'chatReducer/TARGET';\r\nconst DELETE = 'chatReducer/DELETE';\r\nconst EDIT = 'chatReducer/EDIT';\r\n\r\nconst initialState = {\r\n    workChat: [\r\n        { nickname: \"Artem\", message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Risus pretium quam vulputate dignissim suspendisse in est. Aliquet nec ullamcorper sit amet risus. Vel eros donec ac odio', color: '#A12312' },\r\n        { nickname: \"named\", message: 'empor orci dapibus. Nec tincidunt praesent semper feugiat nibh sed pulvinar. Massa id neque aliquam vestibulum morbi blandit cursus. In est ante in nibh', color: '#4CBB17' },\r\n        { nickname: \"Baron1212\", message: 'molestie. Dictumst quisque sagittis purus sit amet volutpat.', color: '#9EE788' },\r\n        { nickname: \"AWF\", message: 'met consectetu', color: '#F594B9' }\r\n    ],\r\n    floodChat: [\r\n        { nickname: \"FISH\", message: ' risus. Vel eros donec ac odio tempor orci dapibus. Nec tincidunt praes', color: '#A12312' },\r\n        { nickname: \"_vagner\", message: 'piscing elit', color: '#337AB7' },\r\n        { nickname: \"Dima\", message: 'cursus mattis', color: '#B2A5F3' },\r\n        { nickname: \"Artem\", message: 'ahaha', color: '#A12312' },\r\n        { nickname: \"Artem\", message: 'sed do', color: '#A12312' },\r\n        { nickname: \"AWF\", message: 'lol :D', color: '#F594B9' },\r\n        { nickname: \"AWF\", message: 'molestie. Dictumst :)', color: '#F594B9' },\r\n        { nickname: \"AWF\", message: 'qwerty123', color: '#F594B9' }\r\n    ],\r\n    target: null\r\n};\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_WORK:\r\n            if (action.msg !== '') {\r\n                const newMessage = {\r\n                    nickname: action.myNick, message: action.msg, color: action.myColor\r\n                }\r\n                return {\r\n                    ...state, workChat: [...state.workChat, newMessage]\r\n                }\r\n            }\r\n            return state;\r\n\r\n        case SEND_FLOOD:\r\n            if (action.msg !== '') {\r\n                const newMessage = {\r\n                    nickname: action.myNick, message: action.msg, color: action.myColor\r\n                }\r\n                return {\r\n                    ...state, floodChat: [...state.floodChat, newMessage]\r\n                }\r\n            }\r\n            return state;\r\n\r\n        case TARGET:\r\n            return {\r\n                ...state, target: `@${action.target}`\r\n            }\r\n\r\n        case DELETE:\r\n\r\n            if (action.chatType === 'work') {\r\n                const newWorkChat = state.workChat.splice(action.target, 1);\r\n                return {\r\n                    ...state, newWorkChat\r\n                };\r\n            } else if (action.chatType === 'flood') {\r\n                const newFloodChat = state.floodChat.splice(action.target, 1);\r\n                return {\r\n                    ...state, newFloodChat\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case EDIT:\r\n\r\n            if (action.chatType === 'work') {\r\n                const message = {\r\n                    nickname: action.myNick, message: action.msg, color: action.myColor\r\n                }\r\n                const msg = state.workChat.splice(action.target, 1, message)\r\n                return {\r\n                    ...state, msg\r\n                }\r\n            } else if (action.chatType === 'flood') {\r\n                const message = {\r\n                    nickname: action.myNick, message: action.msg, color: action.myColor\r\n                }\r\n                const msg = state.floodChat.splice(action.target, 1, message)\r\n                return {\r\n                    ...state, msg\r\n                }\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const editMessage = (target, chatType, msg, myNick, myColor) => {\r\n    return {\r\n        type: EDIT, target, chatType, msg, myNick, myColor\r\n    }\r\n}\r\n\r\nexport const deleteMessage = (target, chatType) => {\r\n\r\n    return {\r\n        type: DELETE, target, chatType\r\n    }\r\n}\r\n\r\nexport const setTarget = target => {\r\n    return {\r\n        type: TARGET, target\r\n    }\r\n}\r\n\r\nexport const sendWorkMessage = (msg, myNick, myColor) => {\r\n    return {\r\n        type: SEND_WORK, msg, myNick, myColor\r\n    }\r\n}\r\n\r\n\r\nexport const sendFloodMessage = (msg, myNick, myColor) => {\r\n    return {\r\n        type: SEND_FLOOD, msg, myNick, myColor\r\n    }\r\n}\r\n\r\nexport default chatReducer;","import React, { useState } from 'react';\r\nimport Style from './Auth.module.css'\r\n\r\nconst Auth = props => {\r\n\r\n    const [nickname, setNickname] = useState('unnamed')\r\n    const [color, setColor] = useState('#F594B9');\r\n\r\n    const { auth, setAuthorization } = props;\r\n\r\n    const submitHandler = (name, clr) => {\r\n        if (name === '') {\r\n            setNickname('unnamed');\r\n        } else {\r\n            setAuthorization({ name, clr });\r\n        }\r\n\r\n    }\r\n\r\n    const clrbox = auth.colors.map((i, indx) => {\r\n\r\n        if (color === i) {\r\n            return <div\r\n                style={{ backgroundColor: i, width: '40px', height: '40px' }}\r\n                className={Style.box}\r\n                key={indx}></div>\r\n        } else {\r\n            return <div\r\n                onClick={() => {\r\n                    setColor(i)\r\n                }}\r\n                style={{ backgroundColor: i }}\r\n                className={Style.box}\r\n                key={indx}>\r\n            </div>\r\n        }\r\n\r\n    })\r\n\r\n    return <div className={Style.authWrapper}>\r\n        <div className={Style.nicknameAuth}>\r\n            <span>Введите никнейм</span>\r\n            <input\r\n                onChange={(e) => setNickname(e.target.value)}\r\n                type=\"text\"\r\n                value={nickname}\r\n            />\r\n        </div>\r\n        <div className={Style.colorsetter}>\r\n            <span>Выбери цвет</span>\r\n            <div className={Style.colorbox}>\r\n                {clrbox}\r\n            </div>\r\n        </div>\r\n        <button\r\n            onClick={() => {\r\n                submitHandler(nickname, color)\r\n            }}\r\n            className={Style.btn}\r\n            type='button'\r\n        >log in</button>\r\n    </div>\r\n}\r\n\r\nexport default Auth;","import { authAPI } from \"../api/api\";\r\n\r\nconst AUTH = 'authReducer/AUTH';\r\nconst GET_AUTH = 'authReducer/GET_AUTH';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    myNick: null,\r\n    myColor: null,\r\n    colors: [\r\n        '#4CBB17',\r\n        '#9EE788',\r\n        '#2D572C',\r\n        '#A12312',\r\n        '#E4766C',\r\n        '#73443F',\r\n        '#122FAA',\r\n        '#B2A5F3',\r\n        '#337AB7',\r\n        '#424242',\r\n        '#F594B9'\r\n    ]\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH:\r\n            return {\r\n                ...state,\r\n                myNick: action.data.name,\r\n                myColor: action.data.clr,\r\n                isAuth: true\r\n            };\r\n        case GET_AUTH:\r\n            return {\r\n                ...state, isAuth: action.boolean\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuth = data => {\r\n    return {\r\n        type: AUTH, data\r\n    }\r\n}\r\n\r\nexport const getAuth = boolean => {\r\n    return {\r\n        type: GET_AUTH, boolean\r\n    }\r\n}\r\n\r\nexport const setAuthorization = (data) => {\r\n    return async (dispatch) => {\r\n        let res = await authAPI.authorization(data)\r\n        dispatch(setAuth(res))\r\n    }\r\n}\r\n\r\nexport const getAuthorization = () => {\r\n    return async (dispatch) => {\r\n        let res = await authAPI.getAuthorization();\r\n\r\n        if (res) {\r\n            dispatch(setAuth(JSON.parse(res.res)))\r\n        } else {\r\n            dispatch(getAuth(res));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n    return async (dispatch) => {\r\n        await authAPI.logout();\r\n        dispatch(getAuth(false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport UserList from './components/UserList';\nimport { connect } from 'react-redux';\nimport { getUsersThunk } from './redux/usersReducer';\nimport Chat from './components/Chat';\nimport { sendFloodMessage, sendWorkMessage, setTarget, deleteMessage, editMessage } from './redux/chatReducer';\nimport Auth from './components/Auth';\nimport { setAuthorization, getAuthorization, logoutThunk } from './redux/authReducer';\n\nconst App = props => {\n\n  const [chatType, setchatType] = useState('work');\n  const {\n    getUsersThunk, auth, getAuthorization, setTarget, logoutThunk\n  } = props;\n\n  useEffect(() => {\n    !auth.isAuth && getAuthorization()\n  }, [getAuthorization, auth.isAuth]);\n\n  useEffect(() => {\n    auth.isAuth && getUsersThunk();\n  }, [getUsersThunk, auth.isAuth, chatType]);\n\n  const active = {\n    backgroundColor: '#e7af69'\n  }\n\n  if (!auth.isAuth) {\n    return <Auth auth={auth} setAuthorization={props.setAuthorization} />\n  } else {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <div className=\"logo\">\n            <h1>logo</h1>\n          </div>\n          <div className=\"categories\">\n            <span\n              style={(chatType === 'work') ? active : undefined}\n              onClick={() => {\n                setchatType('work')\n              }}\n            >\n              Работа\n            </span>\n            <span\n              style={(chatType === 'flood') ? active : undefined}\n              onClick={() => {\n                setchatType('flood')\n              }}\n            >\n              Флудилка\n            </span>\n            <span\n              onClick={() => {\n                logoutThunk()\n              }}\n              className=\"logout\"\n            >\n              log out\n            </span>\n          </div>\n        </div>\n        <div className=\"body\">\n          <UserList users={props.users} setTarget={setTarget} />\n          <Chat\n            chat={props.chat}\n            auth={auth}\n            type={chatType}\n            sendWorkMessage={props.sendWorkMessage}\n            sendFloodMessage={props.sendFloodMessage}\n            deleteMessage={props.deleteMessage}\n            editMessage={props.editMessage}\n          />\n        </div>\n\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n\n    users: state.usersReducer.users,\n    chat: state.chatReducer,\n    auth: state.authReducer\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getUsersThunk,\n  sendWorkMessage,\n  sendFloodMessage,\n  setAuthorization,\n  getAuthorization,\n  setTarget,\n  logoutThunk,\n  deleteMessage,\n  editMessage\n})(App);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport usersReducer from './usersReducer';\r\nimport chatReducer from './chatReducer';\r\nimport authReducer from './authReducer';\r\n\r\nconst reducers = combineReducers({\r\n    usersReducer,\r\n    chatReducer,\r\n    authReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authWrapper\":\"Auth_authWrapper__3FrLz\",\"nicknameAuth\":\"Auth_nicknameAuth__2904P\",\"btn\":\"Auth_btn__28Kr8\",\"colorsetter\":\"Auth_colorsetter__sJgpa\",\"colorbox\":\"Auth_colorbox__3fQVH\",\"box\":\"Auth_box__U0nON\"};"],"sourceRoot":""}